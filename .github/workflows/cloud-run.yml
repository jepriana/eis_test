name: Deploy to Cloud Run Production

on:
  push:
    branches:
      - master
      - main

env:
  CLOUD_RUN_REGION: asia-southeast1
  BACKEND_REPO_NAME: puri-bunda-api
  FRONTEND_REPO_NAME: puri-bunda-web

jobs:
  build-and-deploy-backend:
    name: Setup, Build, and Deploy Backend
    runs-on: ubuntu-latest
    steps:  

    - name: Checkout
      uses: actions/checkout@v3

    - name: Generate .env file for backend
      run: |
        echo 'DATABASE_URL="${{ secrets.DATABASE_URL }}"' >> backend/.env
        echo "ACCESS_TOKEN_KEY=${{ secrets.ACCESS_TOKEN_KEY }}" >> backend/.env 
        echo "REFRESH_TOKEN_KEY=${{ secrets.REFRESH_TOKEN_KEY }}" >> backend/.env 
        echo "ACCESS_TOKEN_AGE=${{ secrets.ACCESS_TOKEN_AGE }}" >> backend/.env 
        echo "REFRESH_TOKEN_AGE=${{ secrets.REFRESH_TOKEN_AGE }}" >> backend/.env 
        echo "SECRET_CODE=${{ secrets.SECRET_CODE }}" >> backend/.env

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT_JSON }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.CLOUD_RUN_PROJECT_NAME }}

    - name: Enable the necessary APIs and enable docker auth
      run: |
        gcloud services enable containerregistry.googleapis.com
        gcloud services enable run.googleapis.com
        gcloud --quiet auth configure-docker

    - name: Build and tag image for backend
      run: |
        cd backend
        docker build . -t "gcr.io/${{ secrets.CLOUD_RUN_PROJECT_NAME }}/${{ env.BACKEND_REPO_NAME }}:${{ github.sha }}"

    - name: Push image to GCR for backend
      run: |
        docker push gcr.io/${{ secrets.CLOUD_RUN_PROJECT_NAME }}/${{ env.BACKEND_REPO_NAME }}:${{ github.sha }}

    - name: Deploy backend to Cloud Run
      run: |
        gcloud run deploy ${{ env.BACKEND_REPO_NAME }} --image gcr.io/${{ secrets.CLOUD_RUN_PROJECT_NAME }}/${{ env.BACKEND_REPO_NAME }}:${{ github.sha }} \
          --project ${{ secrets.CLOUD_RUN_PROJECT_NAME }} \
          --platform managed \
          --region ${{ env.CLOUD_RUN_REGION }} \
          --allow-unauthenticated \
          --quiet
    
  build-and-deploy-frontend:
    name: Setup, Build, and Deploy Frontend
    runs-on: ubuntu-latest
    steps:  

    - name: Checkout
      uses: actions/checkout@v3

    - name: Generate .env file for frontend
      run: |
        echo "REACT_APP_BACKEND_URL=${{ secrets.REACT_APP_BACKEND_URL }}" >> frontend/.env

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT_JSON }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.CLOUD_RUN_PROJECT_NAME }}

    - name: Enable the necessary APIs and enable docker auth
      run: |
        gcloud services enable containerregistry.googleapis.com
        gcloud services enable run.googleapis.com
        gcloud --quiet auth configure-docker

    - name: Build and tag image for frontend
      run: |
        cd frontend
        docker build . -t "gcr.io/${{ secrets.CLOUD_RUN_PROJECT_NAME }}/${{ env.FRONTEND_REPO_NAME }}:${{ github.sha }}"

    - name: Push image to GCR for frontend
      run: |
        docker push gcr.io/${{ secrets.CLOUD_RUN_PROJECT_NAME }}/${{ env.FRONTEND_REPO_NAME }}:${{ github.sha }}

    - name: Deploy frontend to Cloud Run
      run: |
        gcloud run deploy ${{ env.FRONTEND_REPO_NAME }} --image gcr.io/${{ secrets.CLOUD_RUN_PROJECT_NAME }}/${{ env.FRONTEND_REPO_NAME }}:${{ github.sha }} \
          --project ${{ secrets.CLOUD_RUN_PROJECT_NAME }} \
          --platform managed \
          --region ${{ env.CLOUD_RUN_REGION }} \
          --allow-unauthenticated \
          --quiet
